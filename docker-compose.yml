version: '3.8'

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - /tmp/app-resources/static:/app/staticfiles
    ports:
      - "8000:8000"
    env_file:
      - ./envs/.env
    depends_on:
      - postgres
  postgres:
    image: postgres:latest
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: password123
      POSTGRES_USER: Worms123
      POSTGRES_DB: supplement_shop_db
      PGDATA: /var/lib/postgresql/data/pgdata
    env_file:
      - ./envs/.env
    volumes:
      - ./postgresql:/var/lib/postgresql/data

#services:
#  web:
#    image: minkov/petstagram:2023_07
#    build:
#      context: .
#      dockerfile: Dockerfile
#    ports:
#      - "8000:8000"
#    env_file:
#      - ./envs/.env
#    volumes:
#      - /tmp/app-resources/static:/app/static_files
#    platform: linux/amd64
#    command: gunicorn --bind=0.0.0.0:8000 ExamProject.wsgi:application
#    links:
#      - postgres
#  postgres:
#    image: postgres
#    restart: always
#    ports:
#      - "5432:5432"
#    environment:
#      POSTGRES_PASSWORD: password123
#      POSTGRES_USER: Worms123
#      POSTGRES_DB: supplement_shop_db
#      PGDATA: /var/lib/postgresql/data/pgdata
#    env_file:
#      - ./envs/.env
#    volumes:
#      - ./postgresql:/var/lib/postgresql/data
#  nginx:
#    image: nginx
#    ports:
#      - "81:80"
#      - "443:443"
#    volumes:
#      - /tmp/app-resources/static:/home/app/web/staticfiles
#      - ./nginx/conf.d:/etc/nginx/conf.d
#      - ./nginx/logs:/var/log/nginx
#      - ./certbot/www:/var/www/certbot/:ro
#      - ./certbot/conf/:/etc/nginx/ssl/:ro
#    links:
#      - web